#include "bitMap.h"

Bitmap bitmap;

static const uint8_t placeholder_page_16x16[] = {
	0x00, 0x00, 0xFE, 0x7F, 0x02, 0x40, 0x02, 0x40, 0x32, 0x48,
	0x62, 0x44, 0xC2, 0x42, 0x82, 0x41, 0x82, 0x43, 0x42, 0x46, 0x22,
	0x4C, 0x12, 0x48, 0x02, 0x40, 0x02, 0x40, 0xFE, 0x7F, 0x00, 0x00,
};

static const uint8_t midi_out_page_16x16[] = {
	0xFF, 0xFF, 0xC1, 0xFF, 0xFD, 0xFF, 0xC1, 0xE7, 0xFD, 0xCB, 0xC3,
	0x9D, 0xFF, 0x3E, 0x41, 0x7F, 0x7F, 0x1C, 0xC5, 0x9D, 0xDD, 0x9D,
	0xC1, 0x9D, 0xFF, 0x81, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

static const uint8_t midi_in_page_16x16[] = {
	0xFF, 0xFF, 0xC1, 0xFF, 0xFD, 0xFF, 0xC1, 0x81, 0xFD, 0x9D, 0xC3,
	0x9D, 0xFF, 0x9D, 0x41, 0x1C, 0x7F, 0x7F, 0xC5, 0x3E, 0xDD, 0x9D,
	0xC1, 0xCB, 0xFF, 0xE7, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

static const uint8_t cv_out_page_16x16[] = {
	0x7F, 0x00, 0x7F, 0x00, 0x22, 0x00, 0x22, 0x18, 0x22, 0x34, 0x22,
	0x62, 0x22, 0xC1, 0xA2, 0x80, 0xBE, 0xE3, 0x3E, 0x62, 0x22, 0x62,
	0x14, 0x62, 0x22, 0x7E, 0x22, 0x00, 0x22, 0x00, 0x1C, 0x00,
};

static const uint8_t cv_in_page_16x16[] = {
	0x7F, 0x00, 0x7F, 0x00, 0x22, 0x00, 0x22, 0x7E, 0x22, 0x62,
	0x22, 0x62, 0x22, 0x62, 0xA2, 0xE3, 0xBE, 0x80, 0x3E, 0xC1, 0x22,
	0x62, 0x14, 0x34, 0x22, 0x18, 0x22, 0x00, 0x22, 0x00, 0x1C, 0x00,
};

static const uint8_t project_load_page_16x16[] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x01, 0x80, 0x01, 0x80,
	0x01, 0x8C, 0x01, 0x9A, 0x01, 0x31, 0x81, 0x60, 0x41, 0xC0, 0xCF,
	0xF1, 0x09, 0x31, 0x0A, 0xB1, 0x7C, 0xB1, 0x00, 0x3F, 0x00, 0x00,
};

static const uint8_t project_save_page_16x16[] = {
	0x00, 0x00, 0x00, 0x3F, 0x7F, 0xB1, 0x01, 0xB1, 0x01, 0x31,
	0xC1, 0xF1, 0x41, 0xC0, 0x81, 0x60, 0x01, 0x31, 0x01, 0x9A, 0x0F,
	0x8C, 0x09, 0x80, 0x0A, 0x80, 0xFC, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t song_page_16x16[] = {
	0x00, 0x00, 0x40, 0x00, 0xA0, 0x00, 0x7C, 0x20, 0x08, 0x70,
	0x00, 0x70, 0x00, 0x70, 0xF8, 0x3F, 0x18, 0x00, 0x18, 0x00, 0x18,
	0x10, 0x0C, 0x38, 0x0C, 0x38, 0x0C, 0x38, 0xFC, 0x1F, 0x00, 0x00,
};

static const uint8_t song_monitor_page_16x16[] = {
	0x00, 0x80, 0x00, 0x40, 0x10, 0x2E, 0x28, 0x11, 0x9F, 0x24,
	0x82, 0x2E, 0x80, 0x24, 0x00, 0x11, 0x7E, 0x0E, 0x06, 0x00, 0x06,
	0x00, 0x06, 0x04, 0x03, 0x0E, 0x03, 0x0E, 0x03, 0x0E, 0xFF, 0x07,
};

static const uint8_t settings_page_16x16[] = {
	0x00, 0x00, 0xC0, 0x03, 0x58, 0x1A, 0x64, 0x26, 0x04, 0x20,
	0x08, 0x10, 0x8E, 0x71, 0x42, 0x42, 0x42, 0x42, 0x8E, 0x71, 0x08,
	0x10, 0x04, 0x20, 0x64, 0x26, 0x58, 0x1A, 0xC0, 0x03, 0x00, 0x00,
};

static const uint8_t pattern_page_16x16[] = {
	0xD4, 0x1D, 0x48, 0x15, 0xD4, 0x1D, 0x00, 0x00, 0x5C, 0x1D,
	0x94, 0x14, 0x5C, 0x1D, 0x00, 0x00, 0x5C, 0x1D, 0x94, 0x14, 0x5C,
	0x1D, 0x00, 0x00, 0xD4, 0x15, 0x48, 0x09, 0xD4, 0x15, 0x00, 0x00,
};

static const uint8_t track_page_16x16[] = {
	0xFF, 0x7F, 0x01, 0xC0, 0x81, 0xD8, 0x79, 0xD9, 0x81, 0xC0,
	0x01, 0xD8, 0x21, 0xD8, 0xD9, 0xC1, 0x21, 0xD8, 0x01, 0xD8, 0x41,
	0xC0, 0xB9, 0xD9, 0x41, 0xD8, 0x01, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF
};

static const uint8_t warning_icon_16x16[] = {
	0x00, 0x60, 0x00, 0xD8, 0x00, 0xC6, 0x80, 0xC1, 0x60, 0xC0,
	0x18, 0xC0, 0xC6, 0xDB, 0xC6, 0xDB, 0x1C, 0xC0, 0x70, 0xC0, 0xC0,
	0xC1, 0x00, 0xC7, 0x00, 0xDC, 0x00, 0xF8, 0x00, 0xE0, 0x00, 0x00,
};

static const uint8_t timer_8x8[] = {
	0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C,
	0x3C, 0x42, 0x81, 0x81, 0x8F, 0x87, 0x42, 0x3C,
	0x3C, 0x42, 0x81, 0x81, 0x8F, 0x8F, 0x4E, 0x3C,
	0x3C, 0x42, 0x81, 0x81, 0x9F, 0xBF, 0x7E, 0x3C,
	0x3C, 0x42, 0x81, 0x81, 0xFF, 0xFF, 0x7E, 0x3C,
	0x3C, 0x42, 0xE1, 0xF1, 0xFF, 0xFF, 0x7E, 0x3C,
	0x3C, 0x72, 0xF1, 0xF1, 0xFF, 0xFF, 0x7E, 0x3C,
	0x3C, 0x7E, 0xFD, 0xF9, 0xFF, 0xFF, 0x7E, 0x3C,
	0x3C, 0x7E, 0xFF, 0xFF, 0xFF, 0xFF, 0x7E, 0x3C,
};

// The big setter
void Bitmap::set(Bitmap::Id id) {
	switch (id)
	{
	case Bitmap::PLACEHOLDER_PAGE:
		bitmap.data = &placeholder_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::MIDI_IN_PAGE:
		bitmap.data = &midi_in_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::MIDI_OUT_PAGE:
		bitmap.data = &midi_out_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::CV_IN_PAGE:
		bitmap.data = &cv_in_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::CV_OUT_PAGE:
		bitmap.data = &cv_out_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::PROJECT_LOAD_PAGE:
		bitmap.data = &project_load_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::PROJECT_SAVE_PAGE:
		bitmap.data = &project_save_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::SONG_PAGE:
		bitmap.data = &song_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::SONG_MONITOR_PAGE:
		bitmap.data = &song_monitor_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::SETTINGS_PAGE:
		bitmap.data = &settings_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::PATTERN_PAGE:
		bitmap.data = &pattern_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::TRACK_PAGE:
		bitmap.data = &track_page_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::WARNING_ICON:
		bitmap.data = &warning_icon_16x16[0],
		bitmap.width = 16;
		bitmap.height = 16;
		bitmap.frames = 1;
		break;
	case Bitmap::TIMER:
		bitmap.data = &timer_8x8[0],
		bitmap.width = 8;
		bitmap.height = 8;
		bitmap.frames = 9;
		break;
	default:
		break;
	}
}

const uint8_t* Bitmap::pointer(uint8_t frame) {
	uint8_t index = 0;
	if (bitmap.frames > 1) {
		index = frame * bitmap.width * std::ceil(bitmap.height / 8.0f);
	}
	return bitmap.data + index;
}
